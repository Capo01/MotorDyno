// Odrive data collection sketch.
// Takes input data from HX711 load cell amplifer, ACS714 hall effect current sensor and CJMCU-ADS1115 16B bit ADC Development Board
// and writes it to multi-use mult-use variables (MUV)on the odrive.
// See this fork of the odrive firmware for MUV changes https://github.com/Capo01/ODrive
// R. Parsons 13.04.19

// *****************  Odrive UART Setup *******************
// Required to transmit data to odrive over UART to odirve.

#include <SoftwareSerial.h> // included with the Arduino IDE.
#include <ODriveArduino.h> //https://github.com/madcowswe/ODrive/tree/master/Arduino/ODriveArduino

// Odrive UART Printing with stream operator
template<class T> inline Print& operator <<(Print &obj,     T arg) { obj.print(arg);    return obj; }
template<>        inline Print& operator <<(Print &obj, float arg) { obj.print(arg, 4); return obj; }

// Serial to the ODrive
SoftwareSerial odrive_serial(19, 18); //RX (ODrive TX), TX (ODrive RX). Pins 18 and 19 are for RX and TX for arduino Mega only.
// Note: you must also connect GND on ODrive to GND on Arduino!

// ODrive object
ODriveArduino odrive(odrive_serial);

// *****************  HX711 Loadcell setup *******************
// required to cut trace on HX711 breakout board for 80SPS https://www.reddit.com/r/arduino/comments/6prhs2/hx711_sample_rate/

#include "HX711.h" //https://github.com/bogde/HX711

// HX711 circuit wiring
const int LOADCELL_DOUT_PIN = 22;
const int LOADCELL_SCK_PIN = 24;

HX711 scale;


// *****************  Running median setup *******************
// The large amount of EMI generated by the Odrive produces periodic spikes in the readings
// The use of the running median library helps filter out these spikes.

#include <RunningMedian.h> //https://github.com/RobTillaart/Arduino/tree/master/libraries/RunningMedian

RunningMedian samples = RunningMedian(10); // RunningMedian(10) = median of 10 individual samples



void setup() {
  Serial.begin(115200);
  scale.begin(LOADCELL_DOUT_PIN, LOADCELL_SCK_PIN);
  scale.set_scale(468.f); // determined using a known weight. See HX711 library for calibration examples.
  delay(2000); // allow some time for the reading to settle
  scale.tare();
      
  odrive_serial.begin(115200); // ODrive uses 115200 baud
  }

void loop() {

  // read load cell value, filter it and convert to N.mm
  long x = scale.get_units(1);
  samples.add(x);
  float m = samples.getMedian();
  float torque = -m * 0.009807 * 0.1 * 1000; // Convert mass in grams to N.m
  //Serial.print("Torque (N.mm): ");
  //Serial.println(torque);

  // read current sensor voltage and convert to current
  float currentSensor = analogRead(A1); //current shunt reading (+- 30A with a 2.5V reading being 0A)
  float current = ((currentSensor / 1024)* 60 - 30) * 1000; // converts voltage to current value in mA
  //Serial.println(currentSensor); //for debug
  //Serial.print("Odrive Current (A): ");
  //Serial.println(current);

  // write values to odrie using UART
  odrive_serial << "w axis0.muv1 " << torque << '\n';
  odrive_serial << "w axis0.muv2 " << current << '\n';

  delay(12); // 12 millisecond delay since this is the maximum update rate of the load cell
  }
